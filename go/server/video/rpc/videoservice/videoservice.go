// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videoservice

import (
	"Thinkphoto/server/video/rpc/pb"
	"context"



	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommonResponse              = pb.CommonResponse
	GetPublishTokenRequest      = pb.GetPublishTokenRequest
	GetPublishTokenResponse     = pb.GetPublishTokenResponse
	GetPublishVideoListRequest  = pb.GetPublishVideoListRequest
	GetPublishVideoListResponse = pb.GetPublishVideoListResponse
	GetVideoListRequest         = pb.GetVideoListRequest
	GetVideoListResponse        = pb.GetVideoListResponse
	PublishVideoRequest         = pb.PublishVideoRequest
	PublishVideoResponse        = pb.PublishVideoResponse
	UpdateCommentCountReq       = pb.UpdateCommentCountReq
	UpdateCommentCountRsp       = pb.UpdateCommentCountRsp
	UpdateFavoriteCountReq      = pb.UpdateFavoriteCountReq
	UpdateFavoriteCountRsp      = pb.UpdateFavoriteCountRsp
	VideoInfo                   = pb.VideoInfo

	VideoService interface {
		// 获取上传回调凭证
		GetPublishToken(ctx context.Context, in *GetPublishTokenRequest, opts ...grpc.CallOption) (*GetPublishTokenResponse, error)
		// 获取用户上传视频列表
		GetPublishVideoList(ctx context.Context, in *GetPublishVideoListRequest, opts ...grpc.CallOption) (*GetPublishVideoListResponse, error)
		// 上传视频
		PublishVideo(ctx context.Context, in *PublishVideoRequest, opts ...grpc.CallOption) (*PublishVideoResponse, error)
		// 获取视频列表
		GetVideoList(ctx context.Context, in *GetVideoListRequest, opts ...grpc.CallOption) (*GetVideoListResponse, error)
		// 更新这个视频的获赞数
		UpdateFavoriteCount(ctx context.Context, in *UpdateFavoriteCountReq, opts ...grpc.CallOption) (*UpdateFavoriteCountRsp, error)
		// 更新这个视频的评论数
		UpdateCommentCount(ctx context.Context, in *UpdateCommentCountReq, opts ...grpc.CallOption) (*UpdateCommentCountRsp, error)
	}

	defaultVideoService struct {
		cli zrpc.Client
	}
)

func NewVideoService(cli zrpc.Client) VideoService {
	return &defaultVideoService{
		cli: cli,
	}
}

// 获取上传回调凭证
func (m *defaultVideoService) GetPublishToken(ctx context.Context, in *GetPublishTokenRequest, opts ...grpc.CallOption) (*GetPublishTokenResponse, error) {
	client := pb.NewVideoServiceClient(m.cli.Conn())
	return client.GetPublishToken(ctx, in, opts...)
}

// 获取用户上传视频列表
func (m *defaultVideoService) GetPublishVideoList(ctx context.Context, in *GetPublishVideoListRequest, opts ...grpc.CallOption) (*GetPublishVideoListResponse, error) {
	client := pb.NewVideoServiceClient(m.cli.Conn())
	return client.GetPublishVideoList(ctx, in, opts...)
}

// 上传视频
func (m *defaultVideoService) PublishVideo(ctx context.Context, in *PublishVideoRequest, opts ...grpc.CallOption) (*PublishVideoResponse, error) {
	client := pb.NewVideoServiceClient(m.cli.Conn())
	return client.PublishVideo(ctx, in, opts...)
}

// 获取视频列表
func (m *defaultVideoService) GetVideoList(ctx context.Context, in *GetVideoListRequest, opts ...grpc.CallOption) (*GetVideoListResponse, error) {
	client := pb.NewVideoServiceClient(m.cli.Conn())
	return client.GetVideoList(ctx, in, opts...)
}

// 更新这个视频的获赞数
func (m *defaultVideoService) UpdateFavoriteCount(ctx context.Context, in *UpdateFavoriteCountReq, opts ...grpc.CallOption) (*UpdateFavoriteCountRsp, error) {
	client := pb.NewVideoServiceClient(m.cli.Conn())
	return client.UpdateFavoriteCount(ctx, in, opts...)
}

// 更新这个视频的评论数
func (m *defaultVideoService) UpdateCommentCount(ctx context.Context, in *UpdateCommentCountReq, opts ...grpc.CallOption) (*UpdateCommentCountRsp, error) {
	client := pb.NewVideoServiceClient(m.cli.Conn())
	return client.UpdateCommentCount(ctx, in, opts...)
}
