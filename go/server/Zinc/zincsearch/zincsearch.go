// Code generated by goctl. DO NOT EDIT.
// Source: zinc.proto

package zincsearch

import (
	"context"

	"Zinc/pb/zinc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateDocRequest = zinc.CreateDocRequest
	DeleteDocRequest = zinc.DeleteDocRequest
	Doc              = zinc.Doc
	Index            = zinc.Index
	Response         = zinc.Response
	SearchRequest    = zinc.SearchRequest
	SearchResponse   = zinc.SearchResponse
	UpdateDocRequest = zinc.UpdateDocRequest

	ZincSearch interface {
		Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
		Delete(ctx context.Context, in *DeleteDocRequest, opts ...grpc.CallOption) (*Response, error)
		Update(ctx context.Context, in *UpdateDocRequest, opts ...grpc.CallOption) (*Response, error)
		Doc(ctx context.Context, in *Doc, opts ...grpc.CallOption) (*Response, error)
	}

	defaultZincSearch struct {
		cli zrpc.Client
	}
)

func NewZincSearch(cli zrpc.Client) ZincSearch {
	return &defaultZincSearch{
		cli: cli,
	}
}

func (m *defaultZincSearch) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	client := zinc.NewZincSearchClient(m.cli.Conn())
	return client.Search(ctx, in, opts...)
}

func (m *defaultZincSearch) Delete(ctx context.Context, in *DeleteDocRequest, opts ...grpc.CallOption) (*Response, error) {
	client := zinc.NewZincSearchClient(m.cli.Conn())
	return client.Delete(ctx, in, opts...)
}

func (m *defaultZincSearch) Update(ctx context.Context, in *UpdateDocRequest, opts ...grpc.CallOption) (*Response, error) {
	client := zinc.NewZincSearchClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultZincSearch) Doc(ctx context.Context, in *Doc, opts ...grpc.CallOption) (*Response, error) {
	client := zinc.NewZincSearchClient(m.cli.Conn())
	return client.Doc(ctx, in, opts...)
}
